import Head from "next/head";
import axios from "axios";
import { useState } from "react";
import { BsSearch } from "react-icons/bs";
import Image from "next/image";

export default function Home() {
  const [city, setCity] = useState("");
  const [weather, setWeather] = useState<{
    name: string;
    main: { temp: number };
    weather: [{ description: string }];
  }>({
    name: "",
    main: { temp: 0 },
    weather: [{ description: "" }],
  });

  const [loading, setLoading] = useState(false);

  const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${process.env.NEXT_PUBLIC_WEATHER_KEY}`;

  const weatherData = async (event: React.FormEvent<HTMLFormElement>) => {
    event.preventDefault();
    setLoading(true);
    try {
      const response = await axios.get(url);
      setWeather(response.data);
    } catch (error) {
      console.error(error);
    } finally {
      setLoading(false);
      setCity("");
    }
  };

  return (
    <div>
      <Head>
        <title>The Weather App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/weather1.png" />
      </Head>

      <div className="absolute top-0 left-0 right-0 bottom-0 bg-black/50 z-[1]" />
      <Image
        src="https://images.unsplash.com/photo-1580193769210-b8d1c049a7d9?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=874&q=80"
        alt=""
        fill
        className="object-cover"
      />

      <div className="relative flex justify-between align-items-center max-w-[500px] w-full m-auto pt-10  text-white z-10">
        <form
          className="flex justify-between align-items-center w-full m-auto p-4 bg-transparent border border-gray-400 text-white rounded-3xl"
          onSubmit={weatherData}
        >
          <div className="flex align-items-center">
            <input
              className="bg-transparent border-none text-white focus:outline-none  text-2xl placeholder:text-gray-300"
              type="text"
              value={city}
              onChange={(event) => setCity(event.target.value)}
              placeholder="Search City"
            />
            <button style={{ marginLeft: "130px" }} type="submit">
              <BsSearch size={40} />
            </button>
          </div>
        </form>

        {loading ? (
          <p>Loading...</p>
        ) : weather.name !== "" ? (
          <div>
            <p>City: {weather.name}</p>
            <p>Temperature: {weather.main.temp}Â°C</p>
            <p>Weather: {weather.weather[0].description}</p>
          </div>
        ) : null}
      </div>
    </div>
  );
}
